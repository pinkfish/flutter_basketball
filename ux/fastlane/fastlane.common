def load_ci_config
  begin
    import("../../fastlane/config.ci")
  rescue => exception
    UI.error("ci.config file not found. To use this Fastfile, copy ci.config.template into ci.config and fill in the values")
    raise exception
  end
end

desc "Get build name and build number"
private_lane :get_build_name_and_build_number do
    load_ci_config
    # if running on travis get build number from environment
    if ENV["CI_SERVER"]=="TRAVIS"
      @build_number=ENV["TRAVIS_BUILD_NUMBER"]
    elsif ENV["CI_SERVER"]=="GITHUB"
      @build_number=ENV["CI_PIPELINE_ID"]
    elsif ENV["CI_SERVER"]== "LOCAL"
      @build_number=number_of_commits()
    else
      load_ci_config
      ci_server = ENV["CI_SERVER"]
      ci_project_id = ENV["CI_PROJECT_ID"]
      @build_number=sh("../../script/ci-helper --get-build-number #{ci_server} #{ci_project_id}").chomp("\n")
    end
    @build_name=last_git_tag
end

desc "Generate release notes"
lane :release_notes do |options|
    changelog = changelog_from_git_commits
    "Release notes:\n#{changelog}"
    puts Dir.pwd
    if options[:OS]=="android"
      get_build_name_and_build_number
      puts "build number = '#{@build_number}' #{Dir.pwd}"

      File.write("metadata/android/en-US/changelogs/#{@build_number}.txt", "#{changelog}")
      begin
        git_add(path:"metadata/android/en-US/changelogs/#{@build_number}.txt")
      rescue
        puts "File already added"
      end
    else
      File.write("metadata/en-US/release_notes.txt", "#{changelog}")
    end
end