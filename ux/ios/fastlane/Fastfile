# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  desc "Push a new release build to the App Store"
  lane :release do
    increment_build_number(
      build_number: app_store_build_number + 1,
      xcodeproj: "Runner.xcodeproj"
    )
    build_app(workspace: "Runner.xcworkspace", scheme: "Runner")
    upload_to_app_store
  end

  lane :beta do |options|
    github_api_token = ENV["FL_GITHUB_RELEASE_API_TOKEN"]
    UI.user_error!("Please provide a GitHub API token using `FL_GITHUB_RELEASE_API_TOKEN`") if github_api_token.to_s.length == 0
    UI.user_error!("Please provide a version using `version`") if options[:version].to_s.length == 0
    version = options[:version]
    @build_name=options[:version].delete("v")
    increment_version_number(
      version_number: @build_name,
      xcodeproj: "./Runner.xcodeproj",
    )
    increment_build_number(
      build_number: latest_testflight_build_number + 1,
      xcodeproj: "Runner.xcodeproj"
    )
    begin
      commit_version_bump(
        message: "Version Bump to v#{@build_name}",
        xcodeproj: "./Runner.xcodeproj",
      )
      add_git_tag(
        tag: version,
        force: true,
      )
      push_to_git_remote(tags: true, force: true)
    rescue => error
      puts error
      puts "Error commiting version number"
    end

    get_certificates           # invokes cert
    get_provisioning_profile   # invokes sigh
    release=get_github_release(url: "pinkfish/flutter_basketball", version: options[:version], api_token: github_api_token)
    body = release["body"]

    build_app(workspace: "Runner.xcworkspace", scheme: "Runner")
    upload_to_testflight(changelog: body)
  end
end
